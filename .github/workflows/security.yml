name: Security Audit

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Audit de sécurité quotidien à 2h du matin UTC
    - cron: "0 2 * * *"
  workflow_dispatch:

env:
  NODE_VERSION: "20"

permissions:
  actions: read
  contents: read

jobs:
  dependency-audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Run npm audit
        run: |
          echo "### Security Audit Results" >> $GITHUB_STEP_SUMMARY

          # Audit avec niveau high seulement pour éviter trop d'alertes
          if npm audit --audit-level=high; then
            echo "✅ No high-severity vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Some vulnerabilities found - review recommended" >> $GITHUB_STEP_SUMMARY
            echo "```" >> $GITHUB_STEP_SUMMARY
            npm audit --audit-level=moderate >> $GITHUB_STEP_SUMMARY 2>&1 || echo "Audit details unavailable" >> $GITHUB_STEP_SUMMARY
            echo "```" >> $GITHUB_STEP_SUMMARY
            echo "Continuing build - review and fix when possible"
          fi

      - name: Check for outdated packages
        run: |
          echo "### Outdated Packages" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          npm outdated >> $GITHUB_STEP_SUMMARY || true
          echo "```" >> $GITHUB_STEP_SUMMARY

  codeql-cli-analysis:
    name: CodeQL CLI Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        language: ["javascript"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Build for analysis
        run: npm run build

      - name: Download and setup CodeQL CLI
        run: |
          wget -q https://github.com/github/codeql-cli-binaries/releases/latest/download/codeql-linux64.tar.gz
          tar -xzf codeql-linux64.tar.gz
          echo "$GITHUB_WORKSPACE/codeql" >> $GITHUB_PATH

      - name: Create CodeQL database
        run: |
          codeql database create codeql-db \
            --language=${{ matrix.language }} \
            --source-root . \
            --command="npm run build" || \
          codeql database create codeql-db \
            --language=${{ matrix.language }} \
            --source-root .

      - name: Run CodeQL analysis
        run: |
          codeql database analyze codeql-db \
            --format=sarif-latest \
            --output=codeql-results.sarif \
            --ram=2048 \
            javascript-security-and-quality.qls

      - name: Generate human-readable report
        run: |
          codeql database analyze codeql-db \
            --format=csv \
            --output=codeql-results.csv \
            javascript-security-and-quality.qls

          # Create summary for GitHub
          echo "### CodeQL Analysis Results" >> $GITHUB_STEP_SUMMARY
          if [ -s codeql-results.csv ]; then
            echo "⚠️ Security issues found - download artifacts for details" >> $GITHUB_STEP_SUMMARY
            echo "Issues found: $(tail -n +2 codeql-results.csv | wc -l)" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ No security issues found!" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload CodeQL results
        uses: actions/upload-artifact@v4
        with:
          name: codeql-results-${{ matrix.language }}
          path: |
            codeql-results.sarif
            codeql-results.csv
          retention-days: 30

      - name: Fail on high severity issues (optional)
        run: |
          # Check for critical/high severity issues and fail if found
          if grep -q '"level":"error"' codeql-results.sarif; then
            echo "❌ Critical security issues found!"
            exit 1
          fi

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Install license checker
        run: npm install -g license-checker

      - name: Check licenses
        run: |
          echo "### License Report" >> $GITHUB_STEP_SUMMARY
          echo "Checking for problematic licenses..."

          # Vérifier les licences problématiques
          license-checker --onlyAllow "MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;Unlicense;WTFPL;0BSD" --excludePrivatePackages || {
            echo "⚠️ Some licenses may need review" >> $GITHUB_STEP_SUMMARY
            echo "```" >> $GITHUB_STEP_SUMMARY
            license-checker --summary >> $GITHUB_STEP_SUMMARY || echo "License summary failed" >> $GITHUB_STEP_SUMMARY
            echo "```" >> $GITHUB_STEP_SUMMARY
            echo "Continuing build - manual review required"
          }

          echo "✅ License check completed!" >> $GITHUB_STEP_SUMMARY
